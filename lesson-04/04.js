// # –ú–æ–¥—É–ª—å 2. –ó–∞–Ω—è—Ç–∏–µ 4. –§—É–Ω–∫—Ü–∏–∏

// ## Example 1 - –ò–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é `calcBMI(weight, height)` –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
// –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞ —á–µ–ª–æ–≤–µ–∫–∞. –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –≤–µ—Å –≤ –∫–∏–ª–ª–æ–≥—Ä–∞–º–º–∞—Ö –Ω–∞
// –∫–≤–∞–¥—Ä–∞—Ç –≤—ã—Å–æ—Ç—ã —á–µ–ª–æ–≤–µ–∫–∞ –≤ –º–µ—Ç—Ä–∞—Ö.

// –í–µ—Å –∏ –≤—ã—Å–æ—Ç–∞ –±—É–¥—É—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω—ã –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏. –ù–µ—Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –º–æ–≥—É—Ç –±—ã—Ç—å
// –∑–∞–¥–∞–Ω—ã –≤ –≤–∏–¥–µ `24.7` –∏–ª–∏ `24,7`, —Ç–æ –µ—Å—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç–∏
// –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—è—Ç–∞—è.

// –ò–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–∫—Ä—É–≥–ª–∏—Ç—å –¥–æ –æ–¥–Ω–æ–π —Ü–∏—Ñ—Ä—ã –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π;

// ```js
// function calcBMI(weight, height) {
//     weight = weight.replace(',', '.');
//     height = height.replace(',', '.');
//     let rezult = weight / (Math.pow(height,2));
//     rezult = Math.round(parseFloat(rezult * 10)) / 10;
//     return  rezult;
// }
// const bmi = calcBMI('88,3', '1.75');
// //  const bmi = calcBMI('88,3', '1.75');
// console.log(bmi); // 28.8
// let t = 5.5;
// console.log(Math.pow(t, 2));
// ```

// ## Example 2 - –ú–µ–Ω—å—à–µ–µ –∏–∑ —á–∏—Å–µ–ª

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é `min(a,b)`, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—å—à–µ–µ –∏–∑ —á–∏—Å–µ–ª `a` –∏ `b`.

// ```js
// console.log(min(2, 5)); // 2
// console.log(min(3, -1)); // -1
// console.log(min(1, 1)); // 1
// ```

// ## Example 3 - –ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é `getRectArea(dimensions)` –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
// —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä `dimensions` –≤ –≤–∏–¥–µ
// —Å—Ç—Ä–æ–∫–∏. –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º.

// ```js
// function getRectArea(dimensions) {}

// console.log(getRectArea('8 11'));
// ```

// ## Example 4 - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é `logItems(items)`, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ü–∏–∫–ª
// `for`, –∫–æ—Ç–æ—Ä—ã–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤
// —Ñ–æ—Ä–º–∞—Ç–µ `<–Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞>`. –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞
// –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å `1`.

// –ù–∞–ø—Ä–∏–º–µ—Ä –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ `['Mango', 'Poly', 'Ajax']` —Å –∏–Ω–¥–µ–∫—Å–æ–º `0`
// –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ `1 - Mango`, –∞ –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ 2 –≤—ã–≤–µ–¥–µ—Ç `3 - Ajax`.

// ```js
// function logItems(items) {}

// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);
// ```

// ## Example 5 - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é `printContactsInfo(names, phones)` –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º—è
// –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í –ø–∞—Ä–∞–º–µ—Ç—Ä—ã `names` –∏ `phones` –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã
// —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏
// —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
// –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.

// ```js
// function printContactsInfo(names, phones) {}

// printContactsInfo(
//   'Jacob,William,Solomon,Artemis',
//   '89001234567,89001112233,890055566377,890055566300',
// );
// ```

// ## Example 6 - –ü–æ–∏—Å–∫ –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é `findLargestNumber(numbers)`–∫–æ—Ç–æ—Ä–∞—è –∏—â–µ—Ç —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ –≤
// –º–∞—Å—Å–∏–≤–µ.

// ```js
// function findLargestNumber(numbers) {}

// console.log(findLargestNumber([2, 17, 94, 1, 23, 37])); // 94
// console.log(findLargestNumber([49, 4, 7, 83, 12])); // 83
// ```

// ## Example 7 - –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é `calAverage()` –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
// –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –í—Å–µ –∞—Ä—É–≥–º–µ–Ω—Ç—ã –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞–º–∏.

// ```js
// function calAverage() {}

// console.log(calAverage(1, 2, 3, 4)); // 2.5
// console.log(calAverage(14, 8, 2)); // 8
// console.log(calAverage(27, 43, 2, 8, 36)); // 23.2
// ```

// ## Example 8 - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é `formatTime(minutes)` –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–µ–¥—ë—Ç –∑–Ω–∞—á–µ–Ω–∏–µ `minutes`
// (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç) –≤ —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∞—Å–æ–≤ –∏ –º–∏–Ω—É—Ç `HH:MM`.

// ```js
// const hours = Math.floor(totalMinutes / 60);
// const minutes = totalMinutes % 60;
// console.log(hours);
// console.log(minutes);

// const doubleDigitHours = String(hours).padStart(2, 0);
// const doubleDigitMinutes = String(minutes).padStart(2, 0);
// console.log(`${doubleDigitHours}:${doubleDigitMinutes}`);

// function formatTime(minutes) {}

// console.log(formatTime(70)); // "01:10"
// console.log(formatTime(450)); // "07:30"
// console.log(formatTime(1441)); // "24:01"
// ```

// ## Example 9 - –ö–æ–ª–ª–µ–∫—Ü–∏—è –∫—É—Ä—Å–æ–≤ (includes, indexOf, push –∏ —Ç. –¥.)

// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –æ–±—É—á–∞—é—â–∏—Ö –∫—É—Ä—Å–æ–≤ `courses`:

// - `addCourse(name)` - –¥–æ–±–∞–≤–ª—è–µ—Ç –∫—É—Ä—Å –≤ –∫–æ–Ω–µ—Ü –∫–æ–ª–ª–µ–∫—Ü–∏–∏
// - `removeCourse(name)` - —É–¥–∞–ª—è–µ—Ç –∫—É—Ä—Å –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
// - `updateCourse(oldName, newName)` - –∏–∑–º–µ–Ω—è–µ—Ç –∏–º—è –Ω–∞ –Ω–æ–≤–æ–µ

// ```js
// const courses = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];

// addCourse('Express');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL', 'Express']
// addCourse('CSS'); // '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ç–∞–∫–æ–π –∫—É—Ä—Å'

// removeCourse('React');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'Express']
// removeCourse('Vue'); // '–ö—É—Ä—Å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω'

// updateCourse('Express', 'NestJS');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'NestJS']
// ```


// function splitMessage(message, delimiter) {
//   let words;
//   // Change code below this line
// words = message.split(delimiter);
//   // Change code above this line
//   return words;
// }

// const name = "Mango";
// console.log(name.split("")); // ["M", "a", "n", "g", "o"]

// const message = "JavaScript essentials";
// console.log(message.split(" ")); // ["JavaScript", "essentials"]


// function calculateEngravingPrice(message, pricePerWord) {
//    // Change code below this line
// let price;
//   message = message.split(" ");
//   price = pricePerWord *  message.length;
//     return price;

//    // Change code above this line
// }

// calculateEngravingPrice("JavaScript is in my blood", 10);

// function makeStringFromArray(array, delimiter) {
//   let string;
//   // Change code below this line
// for (const element of array) {
//     string = array.join(delimiter);
// }
//   // Change code above this line
//     console.log(string);
//     return string;
// }
// makeStringFromArray(["Mango", "hurries", "to", "the", "train"], " ");
// makeStringFromArray(["top", "picks", "for", "you"], "_")
// function slugify(title) {
//   // Change code below this line
// title = title.toLowerCase().split(' ').join('-');
//     return title;
  
// //    console.log(title);

//   // Change code above this line
// }

// slugify("Arrays for begginers");
// slugify("How to become a JUNIOR developer in TWO WEEKS");

// const fruits = ['apple', 'plum', 'pear', 'orange', 'banana'];

// // Change code below this line
// const firstTwoEls =  fruits.slice(0, 2);
// const nonExtremeEls = fruits.slice(1, fruits.length-1);
// const lastThreeEls = fruits.slice(fruits.length - 3, fruits.length);
// console.log(firstTwoEls);
// console.log(nonExtremeEls);
//    console.log(lastThreeEls);


// function makeArray(firstArray, secondArray, maxLength) {
//     // Change code below this line
//     let newArray = firstArray.concat(secondArray);
//     if (newArray.length > maxLength) {
//         newArray = newArray.slice(0, maxLength);
//     }

//     // console.log(newArray);
// return newArray;

//     // Change code above this line
// }
  
// makeArray(["Mango", "Poly"], ["Ajax", "Chelsea"], 3);

// function calculateTotal(number) {
//  // Change code below this line
//   let summ=0;
// for (let i = 1; i <= number; i += 1) {
// summ +=i;
//     }
//     console.log(summ);
// return summ;
//   // Change code above this line
// }

// calculateTotal(1);
// calculateTotal(7);

